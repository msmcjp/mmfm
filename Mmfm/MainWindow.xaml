<Window x:Class="Mmfm.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Mmfm"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:c="clr-namespace:Mmfm.Commands"
        mc:Ignorable="d" 
        xmlns:ui="http://schemas.modernwpf.com/2019"
        ui:WindowHelper.UseModernWindowStyle="True"
        Width="600"
        Height="600"
        MinWidth="600"
        MinHeight="600"
        WindowStartupLocation="CenterScreen" 
        Title="mmfm"
        local:InputBindingsSourceAttachedProperty.InputBindingsSource="{Binding InputBindings}"
        Loaded="Window_Loaded"
        Closing="Window_Closing" >

    <Window.Resources>
        <c:FocusCommand x:Key="FocusCommand"/>
    </Window.Resources>

    <Window.DataContext>
        <local:MainViewModel/>
    </Window.DataContext>
    
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadSettingsCommand}" />
            <i:CallMethodAction TargetObject="{Binding RelativeSource={RelativeSource AncestorType=Window}}" 
                                MethodName="RestoreGrid"/>
        </i:EventTrigger>

        <i:EventTrigger EventName="Closing" >
            <i:CallMethodAction TargetObject="{Binding RelativeSource={RelativeSource AncestorType=Window}}" 
                                MethodName="SaveWindow"/>
            <i:CallMethodAction TargetObject="{Binding}" MethodName="Dispose"/>
        </i:EventTrigger>

        <i:PropertyChangedTrigger Binding="{Binding Settings.HotKey}">
            <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=RegisterHotKeyCommand}" 
                                   CommandParameter="{Binding Settings.HotKey}"/>
        </i:PropertyChangedTrigger>

        <i:PropertyChangedTrigger Binding="{Binding Settings.Theme}">
            <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=ChangeThemeCommand}" 
                                   CommandParameter="{Binding Settings.Theme}"/>
        </i:PropertyChangedTrigger>

        <i:PropertyChangedTrigger Binding="{Binding Settings.AccentColor}">
            <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=ChangeAccentColorCommand}" 
                                   CommandParameter="{Binding Settings.AccentColor}"/>
        </i:PropertyChangedTrigger>
    </i:Interaction.Triggers>
    <Grid>
        <Grid.InputBindings>
            <KeyBinding Command="" Gesture="Tab"/>
        </Grid.InputBindings>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Grid x:Name="Grid" Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="10"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <local:FileManagerControl x:Name="First" Grid.Column="0" DataContext="{Binding DualFileManager.First}" IsActive="{Binding IsActive, Mode=OneWayToSource}" />
            <GridSplitter HorizontalAlignment="Stretch" Grid.Column="1" IsTabStop="False"/>
            <local:FileManagerControl x:Name="Second"  Grid.Column="2" DataContext="{Binding DualFileManager.Second}" IsActive="{Binding IsActive, Mode=OneWayToSource}" />
        </Grid>

        <StatusBar Grid.Row="2" Height="24">
            <TextBlock Text="{Binding DualFileManager.ActiveFileManager.SelectionStatusText}"/>
        </StatusBar>

        <Border x:Name="ContentDialogBorder" Grid.Row="1" VerticalAlignment="Stretch"/>
    </Grid>
</Window>
